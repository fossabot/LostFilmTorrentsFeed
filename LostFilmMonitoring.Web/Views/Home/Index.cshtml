 @using LostFilmMonitoring.Web.ViewComponents;
@model LostFilmMonitoring.BLL.Models.IndexViewModel

<style>
    .item-name {
        color: green;
    }

    .item-quality {
        color: darkblue;
        padding-left: 5px;
    }

    .item-remove {
        color: orangered;
        padding-left: 5px;
        font-weight: bold;
        cursor: pointer;
    }

    .series-item:checked + .series-item-label {
        font-weight: bold;
        color: red;
    }

    .series {
        height: 250px;
        margin: 3px;
        overflow: hidden;
        border: 1px solid white;
        cursor: pointer;
        text-align: center;
    }

    .series-header {
        height: 40px;
        font-weight: bold;
        position: relative;
    }

        .series-header DIV {
            bottom: 0;
            left: 50%;
            position: absolute;
            margin-left: -75px;
            width: 150px;
        }


    .series-selected {
        background-color: aquamarine;
        border: 1px solid green;
    }

    .hidden {
        display: none;
    }

    .col-md-2 {
        padding: 0;
    }
</style>

<div class="row">
    <div class="col-md-12">
        <h2>Создайте ваш персональный RSS Torrent Feed с сайта LostFilm.TV</h2>
        @await Component.InvokeAsync("Episodes", new Episodes("Обновления за последние сутки:", Model.Last24HoursItems))
        @await Component.InvokeAsync("Episodes", new Episodes("Обновления за последние 7 дней:", Model.Last7DaysItems))
        @await Component.InvokeAsync("Episodes", new Episodes("Старше 7 дней:", Model.OlderItems))
    </div>

    @section Menu {
        <li><a id="save" href="javascript:submit()" style="font-weight:bold; color:yellow; font-size:16px; display:none;">Сохранить изменения</a></li>
        <li><a id="saved" href="javascript:void(0)" style="font-weight:bold; color:chartreuse; font-size:16px; display:none;">Сохранено</a></li>
    }

    @section Scripts {
        <script>
            var changeQuality = function () {
                $('#save').show();
            }
            var check = function (div) {
                $('#save').show();
                var hidden = div.getElementsByTagName('input')[0];
                var select = div.getElementsByTagName('select')[0];
                if (hidden.value !== "") {
                    div.classList.remove("series-selected");
                    select.classList.add("hidden");
                    hidden.value = "";
                } else {
                    div.classList.add("series-selected");
                    select.classList.remove("hidden");
                    hidden.value = "value";
                }
            }
            var collect = function () {
                var data = new Array()
                var hiddens = $('.series').find('input[type=hidden]:first');
                for (var i = 0; i < hiddens.length; i++) {
                    if (hiddens[i].value === "") continue;
                    data.push(
                        {
                            @nameof(LostFilmMonitoring.BLL.Models.SubscriptionItem.SeriesName): hiddens[i].name,
                            @nameof(LostFilmMonitoring.BLL.Models.SubscriptionItem.Quality): document.getElementsByName(hiddens[i].name + "_quality")[0].value
                        }
                    );
                }
                return data;
            }

        </script>

        @if (Model.KnownUser)
        {
            <script>
                var submit = function () {
                    $.post("/", { SelectedItems: collect() }, function () {
                        $('#save').hide();
                        $('#saved').show(0).delay(1000).hide(0);
                    });
                }
            </script>
        }
        else
        {
            <script>
                var submit = function () {
                    $.cookie("selected", JSON.stringify(collect()));
                    location.href="@Url.Action("Register")"
                }
            </script>
        }
    }
</div>